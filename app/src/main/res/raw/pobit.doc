#include <ctime>
#include <iostream>
using namespace std;
typedef unsigned int UI;
//АЛГОРИТМ ПОБИТОВОЙ СОРТИРОВКИ
void Sorting_Pobit(int* a, int L, int R, int k) {//на вход поступает a- массив, L - левая и R - правая граница, и K - максимальное число битов в числе
	if (L >= R || k < 0) {//смотрим что б выполнялось условие, иначе выходи из функции
		return;
	}
	int i = L, j = R;//задаем левые и правую границу
	int t;
	UI mask = 1;//начальный бит, который будем проверять
	mask <<= k;
	while (i <= j)//проверяем номера элементов
	{
		while ((i <= j) && (a[i] & mask) == 0)//смотри данный бит элемента массива, запоминаем последний номер
		{
			i++;
		}
		while ((i <= j) && (a[j] & mask) != 0)//смотри данный бит элемента массива, запоминаем последний номер
		{
			j--;
		}
		if (i < j)//сравниваем номера элементов и меняем их местами через переменную t
		{
			t = a[i];
			a[i] = a[j];
			a[j] = t;
			i++;
			j--;
		}
	}
	//смотрим левую границу
	if (L < j)
	{
		Sorting_Pobit(a, L, j, k - 1);//рекурсивно вызываем сортировку
	}
	//смотрим правую границу
	if (i < R) {
		Sorting_Pobit(a, i, R, k - 1);//рекурсивно вызываем сортировку
	}
}
//поиск максимального элемента в массиве, нужно для определения максимального числа бит в числе
int Max(int* a, int n) {
	int max = a[0];
	for (int i = 1; i < n; i++) {
		if (a[i] > max) {
			max = a[i];
		}
	}
	return max;
}
//находим максимальное число бит, по максимальному элементу массива
int RaZ(int b) {
	int flag = 31;
	UI mask = 1;
	int z = b, n = 0;
	mask <<= 31;
	while ((mask & z) == 0)
	{
		flag--;
		mask >>= 1;
		n = flag;
	}
	return n;
}
int main() {
	srand(time(NULL));
	setlocale(LC_ALL, "rus");
	int mas[100];//массив под 100 элементов
	int n = 20;//размер массива
	//создаем рандомно массив
	for (int i = 0; i < n; i++) {
		mas[i] = rand() % 100;//создаем рандомно массив в диапозоне от 0 до 100
	}
	cout << "Данный массив, который создан рандомно в диапозоне от [0...100]: " << endl;
	for (int i = 0; i < n; i++) {
		cout << mas[i] << " ";
	}
	cout << endl;
	int max = Max(mas, n);
	int k = RaZ(max);
	Sorting_Pobit(mas, 0, n-1,k);
	cout << endl;
	cout << "Отсортированный массив по алгоритму (Побитовая сортировка): "<< endl;
	//вывод массива
	for (int i = 0; i < n; i++) {//через цикл выводим значение каждой ячейки массива
		cout << mas[i] << " ";//выводим через пробул элементы массива
	}
	cout << endl;
}